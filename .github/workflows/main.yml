name: docker-java-test-app

on:
  push:
    branches: [main]
    
jobs:
  build_and_test:
  runs-on: ubuntu-latest
  
services:
    redis:
    image: redis
    options: >-
      --health-cmd "redis-clis ping"
      --health-interval 5s
      --health-timeout 5s
      --health-retries 3
    ports:
      - 6379:6379
    steps:
    - uses: actions/checkout@v2
    - name: set up jdk
      uses: actions/setup-java@v1
      with:
        java-version: 14
    - name: cache maven package
      uses: action/cache@v3.2.4
    with:
    path: ~/.m2
    key: ${{ runner.os}}-m2-${{ hashfiles('**/pom.xml') }}
    restore-keys: ${{ runner.os}}-m2
            
     - name:Build and test project with maven
      runs-on:mvn -B package --file pom.xml
          
pulish-job:
     runs-on: ubuntu
     needs: [build_and_test]
     steps:
     - uses: actions/checkout@v2
     - uses: actions/setup-java@v1
       with:
       java-versions: 14
     - run: mvn -B package --file pom.xml -DskipsTests
     - run: mkdir staging && cp target/*jar-with-dependencies.jar staging
     - uses: actions/upload-artifact@v1
       with:
       name: package
       path: staging
       build-docker-image:
     name: publish to Docker Hub
       runs-on:ubuntu-latest
       needs:[build_and_test]
        
       steps:
       - uses: actions/checkout@v2
       - name: login to Docker Hub
         run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
       - name: Build container image
         run: docker build -t ${{ secrets.DOCKER_REPO }}:latest .
       - name: publish DOCKER image
         run: docker push ${{ secret.DOCKER_REPO }}
              
        
          
